source("http://www.bioconductor.org/biocLite.R")
source("http://www.bioconductor.org/biocLite.R")
#biocLite("ALL")
#biocLite("MLInterfaces")
library("ALL")
library(ALL)
#biocLite("ALL")
biocLite("ALL")
biocLite("MLInterfaces")
library(library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server))
library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui=ui, server=server))
library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui=ui, server=server))
library(shiny)
install.packages("shiny")
library(shiny)
library(shiny)
ui <- fluidPage(
)
server <- function(input, output) {
}
shinyApp(ui=ui, server=server))
sudo su - -c "R -e \"install.packages('FactoMineR', repos='http://cran.stat.nus.edu.sg/')\""
install.packages("shiny")
library(shiny)
library(shiny)
ui <- fluidPage(
)
packageVersion("shiny")
install.packages("shiny")
library(shiny)
packageVersion("shiny")
install.packages("shiny")
library(testthat)
library(shiny)
test_check("shiny")
install.packages("shiny")
install.packages("stringi")
.libPaths()
test_check("shiny")
library(shiny); runApp('D:/Documents/GitHub/Rshinyapp/rShinyApp.R')
library(nnet)
install.packages("C:/Users/Sasan Najar/AppData/Local/Temp/RtmpewwGuj/downloaded_packages/shiny_1.2.0.tar.gz", repos = NULL, type = "source")
packageVersion("shiny")
.libPaths()
install.packages("rshiny")
install.packages("shiny")
install.packages("C:/Users/Sasan Najar/AppData/Local/Temp/RtmpewwGuj/downloaded_packages/shiny_1.2.0.tar.gz", repos = NULL, type = "source")
install.packages(c("sourcetools", "shiny"))
install.packages('shiny', type='binary')
library("shiny", lib.loc="C:/emacs/R/win-library/3.4")
install.packages("shiny")
library("shiny", lib.loc="C:/emacs/R/win-library/3.4")
runApp('D:/Documents/GitHub/Rshinyapp/rShinyApp.R')
install.packages("shiny")
